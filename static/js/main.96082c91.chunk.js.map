{"version":3,"sources":["static/images/404Error.jpg","config.js","store/actions/index.js","store/saga/recoverSerializedState.js","store/saga/serializeState.js","store/saga/createTask.js","utils/generateNextId.js","store/saga/controlTaskFlow.js","utils/numbers.js","store/saga/taskGenerator.js","store/saga/handleTaskNameChange.js","store/reducer/index.js","store/reducer/currentTask.js","store/reducer/tasksList.js","store/index.js","store/middleware/logger.js","utils/timeFormatter.js","components/TaskCard.js","components/PageNotFound.js","components/TaskDetails.js","components/containers/TaskDetailsContainer.js","components/Clock.js","components/BasicButton.js","components/DialogButton.js","components/EmptyTaskAlertDialog.js","components/Timer.js","utils/groupTasksForChart.js","components/Chart.js","components/GenericTable.js","components/DeleteTaskAlertDialog.js","components/TasksTable.js","components/NavTabs.js","components/containers/TasksApplicationContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","REDUX_ACTION_NAMES","LITERALS","STORAGE_STATE_KEY","STORAGE_ACCESS","set","key","value","localStorage","setItem","get","getItem","STYLES","ROUTER_PREFIXES","TIME_OUTPUT_FORMAT","TABLE_DATE_FORMAT","TASK_GENERATOR_SETTINGS","from","to","COLORS_PRESET","Array","fill","map","randomcolor","APPLY_SERIALIZED_STATE","CONTROL_TASKS_FLOW","SET_TASK_START_TIME","ADD_TASK","TASK_NAME_CHANGE","SET_TASK_NAME","SET_TASK_END_TIME","DELETE_TASK","DELETE_ALL_TASKS","GENERATE_TASKS","CHECK_SERIALIZED_STATE","applySerializedState","serializedState","formReduxAction","controlTasksFlow","setTaskStartTime","time","addTask","task","handleTaskNameChange","name","setTaskName","setTaskEndTime","deleteTask","id","deleteAllTasks","generateTasks","checkSerializedState","type","payload","recoverSerializedState","_callee","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","_context2","put","JSON","parse","t0","console","error","concat","_marked2","serializeState","state","delay","select","sent","stringify","serializeState_marked","serializeState_callee","takeLatest","serializeState_marked2","createTask_callee","_ref","currentTask","tasksList","tasks","startTime","endTime","taskName","tasksArray","length","Math","max","apply","createTask_marked","controlTaskFlow_callee","controlTaskFlow_marked","call","createTask","controlTaskFlow_marked2","getRandomFromRange","floor","random","TASKS_NUMBER","TASKS_TIME","PAUSE_TIME","taskGenerator_callee","taskGenerator_marked","tasksToGenerate","currentTime","currentTaskId","i","taskTime","pauseAfterTask","moment","startOf","toString","add","randomstring","generate","taskGenerator_marked2","handleTaskNameChange_marked","handleTaskNameChange_callee","handleTaskNameChange_marked2","history","initialState","reducer_currentTask","arguments","undefined","action","Object","objectSpread","reducer_tasksList","toConsumableArray","filter","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","router","connectRouter","applyMiddleware","store","routerMiddleware","controlTaskFlow","taskGenerator","forEach","saga","run","getFormattedDifference","momentDateStart","momentDateNow","diff","timeParam","formatToTwoDigits","join","formatDate","momentDate","format","TABLE","withStyles","card","minWidth","maxWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","props","classes","requestedTask","react_default","createElement","Card_default","className","CardContent_default","Typography_default","color","gutterBottom","variant","component","CardActions_default","react_router_dom","Button_default","size","PageNotFound","alt","style","imageStyles","src","img404","width","marginLeft","TaskDetails","_this$props","this","paramId","find","TaskContainer","TaskCard","Component","styled","div","_templateObject","TaskDetailsContainer","TaskDetails_TaskDetails","connect","DEFAULT_DISPLAY_TIME","Clock","timeToDisplay","launchTimer","_this","timer","setInterval","updateStateTime","destroyTimer","setState","clearInterval","nextProps","nextContext","ClockRoundBlock","TimeOutputWrapper","PureComponent","Clock_templateObject","span","_templateObject2","components_BasicButton","_props$data","data","BasicButton","root","borderRadius","border","height","padding","boxShadow","label","textTransform","sizeSmall","textDecoration","Button","components_DialogButton","DialogButton","fontWeight","LIGHT_BLUE","WARN_COLOR","EmptyTaskAlertDialog","open","index_es","DialogTitleContent","onClick","closeAlert","EmptyTaskAlertDialog_templateObject","TEXT_COLOR","Timer","showEmptyTaskAlert","localTaskName","openAlert","handleTimerButtonClick","handleInputChange","e","target","TimerContainer","TaskNameInput","onChange","placeholder","inputProps","textAlign","Clock_Clock","dispatch","bindActionCreators","Timer_templateObject","Input","require","groupTasksForChart","tasksObject","groupedByHours","reduce","cumulative","current","startHour","hour","endHour","makeArrayAndPush","groupByHours","entries","_ref4","_ref5","slicedToArray","index","_ref6","currentHour","hourStartTime","coerceTaskTimeToCurrentHour","timeSpent","convertTaskToMinutesRange","minutes","second","object","isArray","push","Chart","formBarsArray","maximumTaskId","barsArray","es6","dataKey","stackId","taskMaximumId","groupedTasks","chartBars","_ref2","_ref2$","_ref3","defineProperty","Fragment","align","top","right","left","bottom","strokeDasharray","domain","ButtonContainer","Chart_templateObject","TASK","CustomTableCell","theme","head","backgroundColor","palette","common","white","gray","body","TableCell","marginTop","spacing","unit","overflowX","table","row","&:nth-of-type(odd)","background","default","items","showAlert","transferTaskIdToDelete","scope","DeleteTaskAlertDialog","hideAlert","confirmDeletion","DeleteTaskAlertDialog_DialogTitleContent","DeleteTaskAlertDialog_templateObject","TasksTable","showDeleteTaskAlert","taskToDeleteId","GenericTable","CHART","TABS_BACKGROUND","NavTabs","useStyles","_React$useState","React","useState","location","hash","endsWith","_React$useState2","setValue","react_router","NoSsr_default","AppBar_default","position","Tabs_default","event","newValue","LinkTab","replace","components_TasksTable","components_Chart","Tab_default","assign","Link","makeStyles","flexGrow","TasksApplicationContainer","match","components_Timer","url","App","exact","path","render","containers_TaskDetailsContainer","params","TasksApplicationContainer_TasksApplicationContainer","Boolean","hostname","ReactDOM","es","esm","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96082c91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404Error.45daaab7.jpg\";","import randomcolor from 'randomcolor';\n\nexport const REDUX_ACTION_NAMES = {\n  CHECK_SERIALIZED_STATE: 'RECOVER_SERIALIZED_STATE',\n  APPLY_SERIALIZED_STATE: 'APPLY_SERIALIZED_STATE',\n  CONTROL_TASKS_FLOW: 'CONTROL_TASKS_FLOW',\n  SET_TASK_START_TIME: 'SET_TASK_START_TIME',\n  ADD_TASK: 'ADD_TASK',\n  TASK_NAME_CHANGE: 'TASK_NAME_CHANGE',\n  SET_TASK_NAME: 'SET_TASK_NAME',\n  SET_TASK_END_TIME: 'SET_TASK_END_TIME',\n  DELETE_TASK: 'DELETE_TASK',\n  DELETE_ALL_TASKS: 'DELETE_ALL_TASKS',\n  GENERATE_TASKS: 'GENERATE_TASKS'\n};\n\nexport const LITERALS = {\n  STORAGE_STATE_KEY: 'TIMER_SERIALIZED_STATE'\n};\n\nexport const STORAGE_ACCESS = {\n  set: (key, value) => localStorage.setItem(key, value),\n  get: key => localStorage.getItem(key)\n};\n\nexport const STYLES = {\n  TEXT_COLOR: '#5148c7',\n  LIGHT_BLUE: '#20c1d8',\n  WARN_COLOR: '#bf2b5c',\n  TABS_BACKGROUND: '#00bcd5'\n};\n\nexport const ROUTER_PREFIXES = {\n  TABLE: '/',\n  CHART: 'chart',\n  TASK: 'tasks'\n};\n\nexport const TIME_OUTPUT_FORMAT = {\n  TABLE_DATE_FORMAT: 'HH:mm:ss'\n};\n\nexport const TASK_GENERATOR_SETTINGS = {\n  TASKS_NUMBER: {\n    from: 10,\n    to: 15\n  },\n  TASKS_TIME: {\n    from: 10,\n    to: 90\n  },\n  PAUSE_TIME: {\n    from: 0,\n    to: 10\n  }\n};\n\n/* random colors for chart bars to keep color when new task added */\nexport const COLORS_PRESET = new Array(100).fill(null).map(() => randomcolor());\n","import { REDUX_ACTION_NAMES } from '../../config';\n\nconst {\n  APPLY_SERIALIZED_STATE,\n  CONTROL_TASKS_FLOW,\n  SET_TASK_START_TIME,\n  ADD_TASK,\n  TASK_NAME_CHANGE,\n  SET_TASK_NAME,\n  SET_TASK_END_TIME,\n  DELETE_TASK,\n  DELETE_ALL_TASKS,\n  GENERATE_TASKS,\n  CHECK_SERIALIZED_STATE\n} = REDUX_ACTION_NAMES;\n\nexport const applySerializedState = serializedState =>\n  formReduxAction(APPLY_SERIALIZED_STATE, serializedState);\nexport const controlTasksFlow = () => formReduxAction(CONTROL_TASKS_FLOW);\nexport const setTaskStartTime = time =>\n  formReduxAction(SET_TASK_START_TIME, time);\nexport const addTask = task => formReduxAction(ADD_TASK, task);\nexport const handleTaskNameChange = name =>\n  formReduxAction(TASK_NAME_CHANGE, name);\nexport const setTaskName = name => formReduxAction(SET_TASK_NAME, name);\nexport const setTaskEndTime = time => formReduxAction(SET_TASK_END_TIME, time);\nexport const deleteTask = id => formReduxAction(DELETE_TASK, id);\nexport const deleteAllTasks = () => formReduxAction(DELETE_ALL_TASKS);\nexport const generateTasks = () => formReduxAction(GENERATE_TASKS);\nexport const checkSerializedState = () =>\n  formReduxAction(CHECK_SERIALIZED_STATE);\n\nfunction formReduxAction(type, payload) {\n  return {\n    type,\n    payload\n  };\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { REDUX_ACTION_NAMES, STORAGE_ACCESS, LITERALS } from '../../config';\nimport { applySerializedState } from '../actions';\n\nconst { CHECK_SERIALIZED_STATE } = REDUX_ACTION_NAMES;\n\nexport default function*() {\n  yield takeEvery(CHECK_SERIALIZED_STATE, recoverSerializedState);\n}\n\nfunction* recoverSerializedState() {\n  try {\n    const serializedState = STORAGE_ACCESS.get(LITERALS.STORAGE_STATE_KEY);\n\n    if (serializedState) {\n      yield put(applySerializedState(JSON.parse(serializedState)));\n    }\n  } catch (error) {\n    console.error(`Failed to recover state from storage, ${error}`);\n  }\n}\n","import { takeLatest, delay, select } from 'redux-saga/effects';\nimport { LITERALS, STORAGE_ACCESS, REDUX_ACTION_NAMES } from '../../config';\n\nconst {\n  ADD_TASK,\n  SET_TASK_START_TIME,\n  DELETE_TASK,\n  SET_TASK_NAME\n} = REDUX_ACTION_NAMES;\n\nfunction* serializeState() {\n  yield delay(300);\n\n  const state = yield select();\n  STORAGE_ACCESS.set(LITERALS.STORAGE_STATE_KEY, JSON.stringify(state));\n}\n\nexport default function*() {\n  yield takeLatest(\n    [ADD_TASK, SET_TASK_START_TIME, DELETE_TASK, SET_TASK_NAME],\n    serializeState\n  );\n}\n","import { select, put } from 'redux-saga/effects';\nimport { generateNextId } from '../../utils/generateNextId';\nimport { setTaskEndTime, addTask } from '../actions';\n\nexport default function*() {\n  yield put(setTaskEndTime());\n\n  const { currentTask, tasksList } = yield select();\n  const { tasks } = tasksList;\n  const { startTime, endTime, taskName } = currentTask;\n\n  yield put(\n    addTask({\n      id: generateNextId(tasks),\n      startTime,\n      endTime,\n      taskName\n    })\n  );\n}\n","export function generateNextId(tasksArray) {\n  return tasksArray.length === 0\n    ? 1\n    : Math.max.apply(null, tasksArray.map(({ id }) => id)) + 1;\n}\n","import { takeEvery, select, put, call } from 'redux-saga/effects';\n\nimport createTask from './createTask';\nimport { REDUX_ACTION_NAMES } from '../../config';\nimport { setTaskStartTime } from '../actions';\n\nconst { CONTROL_TASKS_FLOW } = REDUX_ACTION_NAMES;\n\nexport default function*() {\n  yield takeEvery(CONTROL_TASKS_FLOW, controlTasksFlow);\n}\n\nfunction* controlTasksFlow() {\n  const { currentTask } = yield select();\n  const { startTime } = currentTask;\n\n  if (!startTime) {\n    yield put(setTaskStartTime());\n  } else {\n    yield call(createTask);\n  }\n}\n","export function getRandomFromRange(from, to) {\n  return Math.floor(Math.random() * (to - from + 1)) + from;\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport moment from 'moment';\nimport randomstring from 'randomstring';\nimport { addTask, deleteAllTasks } from '../actions';\nimport { getRandomFromRange } from '../../utils/numbers';\nimport { REDUX_ACTION_NAMES, TASK_GENERATOR_SETTINGS } from '../../config';\n\nconst { TASKS_NUMBER, TASKS_TIME, PAUSE_TIME } = TASK_GENERATOR_SETTINGS;\nconst { GENERATE_TASKS } = REDUX_ACTION_NAMES;\n\nexport default function*() {\n  yield takeEvery(GENERATE_TASKS, generateTasks);\n}\n\nfunction* generateTasks() {\n  yield put(deleteAllTasks());\n\n  const tasksToGenerate = getRandomFromRange(\n    TASKS_NUMBER.from,\n    TASKS_NUMBER.to\n  );\n  let currentTime = moment().startOf('day');\n  let currentTaskId = 1;\n\n  for (let i = 0; i < tasksToGenerate; i++) {\n    const taskTime = getRandomFromRange(TASKS_TIME.from, TASKS_TIME.to);\n    const pauseAfterTask = getRandomFromRange(PAUSE_TIME.from, PAUSE_TIME.to);\n\n    yield put(\n      addTask({\n        id: currentTaskId++,\n        startTime: currentTime.toString(),\n        endTime: currentTime.add(taskTime, 'minutes').toString(),\n        taskName: randomstring.generate(10)\n      })\n    );\n\n    currentTime.add(pauseAfterTask, 'minutes');\n  }\n}\n","import { takeLatest, delay, put } from 'redux-saga/effects';\nimport { REDUX_ACTION_NAMES } from '../../config';\nimport { setTaskName } from '../actions';\n\nconst { TASK_NAME_CHANGE } = REDUX_ACTION_NAMES;\n\nfunction* serializeState({ payload }) {\n  yield delay(700);\n  yield put(setTaskName(payload));\n}\n\nexport default function*() {\n  yield takeLatest(TASK_NAME_CHANGE, serializeState);\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport currentTask from './currentTask';\nimport tasksList from './tasksList';\n\nexport default function(history) {\n  return combineReducers({\n    router: connectRouter(history),\n    currentTask,\n    tasksList\n  });\n}\n","import moment from 'moment';\nimport { REDUX_ACTION_NAMES } from '../../config';\n\nconst {\n  SET_TASK_START_TIME,\n  SET_TASK_NAME,\n  SET_TASK_END_TIME,\n  ADD_TASK,\n  APPLY_SERIALIZED_STATE\n} = REDUX_ACTION_NAMES;\n\nconst initialState = {\n  startTime: null,\n  endTime: null,\n  taskName: ''\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case APPLY_SERIALIZED_STATE: {\n      return { ...payload.currentTask };\n    }\n\n    case ADD_TASK: {\n      return initialState;\n    }\n\n    case SET_TASK_NAME: {\n      return { ...state, taskName: payload };\n    }\n\n    case SET_TASK_START_TIME: {\n      return { ...state, startTime: payload || moment() };\n    }\n\n    case SET_TASK_END_TIME: {\n      return { ...state, endTime: payload || moment() };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { REDUX_ACTION_NAMES } from '../../config';\n\nconst {\n  ADD_TASK,\n  DELETE_TASK,\n  DELETE_ALL_TASKS,\n  APPLY_SERIALIZED_STATE\n} = REDUX_ACTION_NAMES;\n\nconst initialState = {\n  tasks: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case APPLY_SERIALIZED_STATE: {\n      return { ...payload.tasksList };\n    }\n\n    case ADD_TASK: {\n      return {\n        tasks: [...state.tasks, payload]\n      };\n    }\n\n    case DELETE_TASK: {\n      return {\n        tasks: state.tasks.filter(({ id }) => id !== payload)\n      };\n    }\n\n    case DELETE_ALL_TASKS: {\n      return {\n        tasks: []\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport recoverSerializedState from './saga/recoverSerializedState';\nimport serializeState from './saga/serializeState';\nimport controlTaskFlow from './saga/controlTaskFlow';\nimport taskGenerator from './saga/taskGenerator';\nimport handleTaskNameChange from './saga/handleTaskNameChange';\n\nimport rootReducer from './reducer';\nimport reduxLogger from './middleware/logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\n/* redux devtools */\nexport const history = createBrowserHistory();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n  rootReducer(history),\n  composeEnhancers(\n    applyMiddleware(reduxLogger, sagaMiddleware, routerMiddleware(history))\n  )\n);\n\n[\n  recoverSerializedState,\n  serializeState,\n  controlTaskFlow,\n  taskGenerator,\n  handleTaskNameChange\n].forEach(saga => sagaMiddleware.run(saga));\n","export default store => next => ({ type, payload }) => {\n  //console.warn(type, payload);\n  next({ type, payload });\n};\n","import moment from 'moment';\nimport { TIME_OUTPUT_FORMAT } from '../config';\n\nexport function getFormattedDifference(\n  momentDateStart,\n  momentDateNow = moment()\n) {\n  const hours = moment(momentDateNow).diff(momentDateStart, 'hours');\n  const minutes = moment(momentDateNow).diff(momentDateStart, 'minutes') % 60;\n  const seconds = moment(momentDateNow).diff(momentDateStart, 'seconds') % 60;\n\n  return [hours, minutes, seconds]\n    .map(timeParam => formatToTwoDigits(timeParam))\n    .join(':');\n}\n\nexport function formatToTwoDigits(timeParam) {\n  return `${timeParam}`.length < 2 ? `0${timeParam}` : timeParam;\n}\n\nexport function formatDate(momentDate) {\n  return moment(momentDate).format(TIME_OUTPUT_FORMAT.TABLE_DATE_FORMAT);\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { ROUTER_PREFIXES } from '../config';\nimport { getFormattedDifference, formatDate } from '../utils/timeFormatter';\n\nconst { TABLE } = ROUTER_PREFIXES;\n\nfunction SimpleCard(props) {\n  const { classes, requestedTask } = props;\n  const { card, title } = classes;\n  const { endTime, id, startTime, taskName } = requestedTask;\n\n  return (\n    <Card className={card}>\n      <CardContent>\n        <Typography className={title} color='textSecondary' gutterBottom>\n          TASK # {`${id}`}\n        </Typography>\n        <Typography variant='h5' component='h2'>\n          Task name : {taskName}\n        </Typography>\n        <Typography variant='h5' component='h2'>\n          Start time : {formatDate(startTime)}\n        </Typography>\n        <Typography variant='h5' component='h2'>\n          End time : {formatDate(endTime)}\n        </Typography>\n        <Typography variant='h5' component='h2'>\n          Spent time : {getFormattedDifference(startTime, endTime)}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link to={TABLE}>\n          <Button size='small'>Back to task list</Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    maxWidth: 600\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 4px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n};\n\nexport default withStyles(styles)(SimpleCard);\n","import React from 'react';\nimport img404 from '../static/images/404Error.jpg';\n\nexport default function() {\n  return (\n    <div>\n      <img alt={'task cannot be found'} style={imageStyles} src={img404} />\n    </div>\n  );\n}\n\nconst imageStyles = {\n  width: '800px',\n  marginLeft: '50%',\n  transform: 'translateX(-50%)'\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport TaskCard from './TaskCard';\nimport PageNotFound from './PageNotFound';\n\nexport default class TaskDetails extends Component {\n  render() {\n    const { id: paramId, tasks } = this.props;\n    const requestedTask = tasks.find(({ id }) => id === paramId);\n\n    return (\n      <TaskContainer>\n        {requestedTask ? (\n          <TaskCard requestedTask={requestedTask} />\n        ) : (\n          <PageNotFound />\n        )}\n      </TaskContainer>\n    );\n  }\n}\n\nconst TaskContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TaskDetails from '../TaskDetails';\n\nclass TaskDetailsContainer extends Component {\n  render() {\n    const { id, tasks } = this.props;\n\n    return <TaskDetails id={id} tasks={tasks} />;\n  }\n}\n\nexport default connect(state => ({\n  tasks: state.tasksList.tasks\n}))(TaskDetailsContainer);\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { getFormattedDifference } from '../utils/timeFormatter';\n\nconst DEFAULT_DISPLAY_TIME = '00:00:00';\n\nexport default class Clock extends PureComponent {\n  state = {\n    timeToDisplay: DEFAULT_DISPLAY_TIME\n  };\n  launchTimer = () => {\n    this.timer = setInterval(this.updateStateTime, 1000);\n  };\n  destroyTimer = () => {\n    this.setState({ timeToDisplay: DEFAULT_DISPLAY_TIME }, () => {\n      clearInterval(this.timer);\n    });\n  };\n  updateStateTime = () => {\n    this.setState({\n      timeToDisplay: getFormattedDifference(this.props.startTime)\n    });\n  };\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const { startTime } = this.props;\n\n    if (!startTime && nextProps.startTime) {\n      this.launchTimer();\n    } else if (startTime && !nextProps.startTime) {\n      this.destroyTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyTimer();\n  }\n\n  render() {\n    const { timeToDisplay } = this.state;\n\n    return (\n      <ClockRoundBlock>\n        <TimeOutputWrapper>{timeToDisplay}</TimeOutputWrapper>\n      </ClockRoundBlock>\n    );\n  }\n}\n\nconst ClockRoundBlock = styled.div`\n  height: 200px;\n  width: 200px;\n  border: 1px solid lightgray;\n  margin: 30px;\n  border-radius: 50%;\n  box-shadow: 0 2px 3px 1px lightgrey;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TimeOutputWrapper = styled.span`\n  font-size: 36px;\n`;\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport { STYLES } from '../config';\n\nexport default function(props = {}) {\n  const { data = {} } = props;\n\n  const BasicButton = withStyles({\n    root: {\n      borderRadius: 3,\n      border: 0,\n      color: data.color || STYLES.TEXT_COLOR,\n      height: 48,\n      padding: '0 30px',\n      margin: '20px 0',\n      boxShadow: '0 3px 5px 2px lightgray',\n      fontSize: '20px',\n      size: 'medium'\n    },\n    label: {\n      textTransform: 'capitalize'\n    },\n    sizeSmall: {\n      height: 'auto',\n      padding: '1px 1px',\n      margin: '3px',\n      fontSize: '14px',\n      textDecoration: 'none'\n    }\n  })(Button);\n\n  return <BasicButton {...props} />;\n}\n","import React from 'react';\nimport { Button, withStyles } from '@material-ui/core';\n\nexport default function(props) {\n  const { data } = props;\n\n  const DialogButton = withStyles({\n    root: {\n      color: data.color,\n      fontWeight: 'bold'\n    }\n  })(Button);\n\n  return <DialogButton {...props} />;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport { STYLES } from '../config';\nimport DialogButton from './DialogButton';\n\nconst { LIGHT_BLUE, WARN_COLOR } = STYLES;\n\nexport default function(props) {\n  const { open } = props;\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        <DialogTitleContent>Empty task name</DialogTitleContent>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          You are trying close task without name, enter the title and try again\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <DialogButton data={{ color: LIGHT_BLUE }} onClick={props.closeAlert}>\n          Close\n        </DialogButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst DialogTitleContent = styled.p`\n  color: ${WARN_COLOR};\n  font-weight: bold;\n  font-size: 24px;\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport { Input, withStyles } from '@material-ui/core';\nimport Clock from './Clock';\nimport BasicButton from './BasicButton';\nimport { STYLES } from '../config';\nimport EmptyTaskAlertDialog from './EmptyTaskAlertDialog';\nimport { controlTasksFlow, handleTaskNameChange } from '../store/actions';\n\nconst { TEXT_COLOR } = STYLES;\n\nclass Timer extends Component {\n  state = {\n    showEmptyTaskAlert: false,\n    localTaskName: ''\n  };\n  openAlert = () => {\n    this.setState({ showEmptyTaskAlert: true });\n  };\n  closeAlert = () => {\n    this.setState({ showEmptyTaskAlert: false });\n  };\n\n  handleTimerButtonClick = () => {\n    const { startTime, taskName, controlTasksFlow } = this.props;\n\n    if (startTime && !taskName) {\n      this.openAlert();\n    } else {\n      controlTasksFlow();\n    }\n  };\n  handleInputChange = e => {\n    this.setState({ localTaskName: e.target.value });\n    this.props.handleTaskNameChange(this.state.localTaskName);\n  };\n\n  componentDidMount() {\n    this.setState({ localTaskName: this.props.taskName });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { taskName } = nextProps;\n\n    this.setState({ localTaskName: taskName });\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      handleTimerButtonClick,\n      handleInputChange,\n      closeAlert\n    } = this;\n    const { startTime } = props;\n    const { localTaskName, showEmptyTaskAlert } = state;\n\n    return (\n      <TimerContainer>\n        <TaskNameInput\n          onChange={handleInputChange}\n          placeholder={'Name of your task'}\n          value={localTaskName}\n          inputProps={{\n            style: {\n              textAlign: 'center'\n            }\n          }}\n        />\n\n        <EmptyTaskAlertDialog\n          open={showEmptyTaskAlert}\n          closeAlert={closeAlert}\n        />\n\n        <Clock startTime={startTime} />\n\n        <BasicButton onClick={handleTimerButtonClick}>\n          {startTime ? 'STOP' : 'START'}\n        </BasicButton>\n      </TimerContainer>\n    );\n  }\n}\n\nexport default connect(\n  ({ currentTask }) => ({\n    startTime: currentTask.startTime,\n    taskName: currentTask.taskName\n  }),\n  dispatch =>\n    bindActionCreators({ controlTasksFlow, handleTaskNameChange }, dispatch)\n)(Timer);\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: space-between;\n  align-items: center;\n  color: ${TEXT_COLOR};\n  padding-top: 30px;\n`;\n\nconst TaskNameInput = withStyles({\n  root: {\n    width: '450px',\n    fontSize: '20px',\n    color: `${TEXT_COLOR}`\n  }\n})(Input);\n","const moment = require('moment');\n\nexport function groupTasksForChart(tasksArray = []) {\n  const groupedByHours = groupByHours(tasksArray);\n\n  return coerceTasksToMinutes(groupedByHours);\n}\n\nexport function formChartBars(tasksGroupedArray) {\n  return tasksGroupedArray.map(([hour, tasksArray = []]) => ({\n    name: moment()\n      .set('hour', hour)\n      .minutes(0)\n      .second(0)\n      .format('HH:mm'),\n    ...tasksArray.reduce(\n      (cumulative, { id, timeSpent }) => ({\n        ...cumulative,\n        [id]: timeSpent\n      }),\n      {}\n    )\n  }));\n}\n\nfunction coerceTasksToMinutes(tasksObject) {\n  return Object.entries(tasksObject).map(([index, tasksArray]) => [\n    index,\n    tasksArray.map(task => convertTaskToMinutesRange(task, index))\n  ]);\n}\n\nfunction coerceTaskTimeToCurrentHour(time, currentHour) {\n  let taskTime = moment(time);\n\n  if (taskTime.get('hour') === currentHour) {\n    return taskTime;\n  } else if (taskTime.get('hour') < currentHour) {\n    return taskTime\n      .set('hour', currentHour)\n      .minutes(0)\n      .second(0);\n  } else {\n    return taskTime\n      .set('hour', currentHour)\n      .add(1, 'hours')\n      .minutes(0)\n      .second(0);\n  }\n}\n\nfunction convertTaskToMinutesRange(\n  { id, startTime, endTime, taskName },\n  currentHour\n) {\n  const hourStartTime = coerceTaskTimeToCurrentHour(startTime, +currentHour);\n  const hourEndTime = coerceTaskTimeToCurrentHour(endTime, +currentHour);\n  const timeSpent = hourEndTime.diff(hourStartTime, 'minutes');\n\n  return {\n    id,\n    startTime,\n    endTime,\n    taskName,\n    timeSpent\n  };\n}\n\nfunction groupByHours(tasksArray) {\n  return tasksArray.reduce((cumulative, current) => {\n    const { startTime, endTime } = current;\n\n    let startHour = moment(startTime).hour();\n    let endHour = moment(endTime).hour();\n\n    if (startHour === endHour) {\n      makeArrayAndPush(cumulative, startHour, current);\n    } else {\n      while (startHour <= endHour) {\n        makeArrayAndPush(cumulative, startHour, current);\n        startHour++;\n      }\n    }\n\n    return cumulative;\n  }, {});\n}\n\nfunction makeArrayAndPush(object, index, task) {\n  if (Array.isArray(object[index])) {\n    object[index].push(task);\n  } else {\n    object[index] = [task];\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport { COLORS_PRESET } from '../config';\nimport BasicButton from './BasicButton';\nimport { formChartBars, groupTasksForChart } from '../utils/groupTasksForChart';\nimport { generateTasks } from '../store/actions';\n\nclass Chart extends PureComponent {\n  formBarsArray = maximumTaskId => {\n    const barsArray = [];\n\n    for (let i = 0; i <= maximumTaskId; i++) {\n      barsArray.push(\n        <Bar key={i} dataKey={i} stackId='a' fill={COLORS_PRESET[i]} />\n      );\n    }\n\n    return barsArray;\n  };\n\n  render() {\n    const { tasks, generateTasks } = this.props;\n\n    /* taskMaximumId used to color tabs with random colors*/\n    const taskMaximumId = Math.max.apply(null, tasks.map(({ id }) => id));\n    const barsArray = this.formBarsArray(taskMaximumId);\n    const groupedTasks = groupTasksForChart(tasks);\n    const chartBars = formChartBars(groupedTasks);\n\n    return (\n      <>\n        <ResponsiveContainer width={'100%'} height={400}>\n          <BarChart\n            align={'center'}\n            data={chartBars}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray='3 3' />\n            <XAxis dataKey='name' />\n            <YAxis type='number' domain={[60, 60]} />\n            <Tooltip />\n            <Legend />\n\n            {barsArray}\n          </BarChart>\n        </ResponsiveContainer>\n        <ButtonContainer>\n          <BasicButton style={{ align: 'center' }} onClick={generateTasks}>\n            Generate tasks\n          </BasicButton>\n        </ButtonContainer>\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tasks: state.tasksList.tasks\n  }),\n  dispatch => bindActionCreators({ generateTasks }, dispatch)\n)(Chart);\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { ROUTER_PREFIXES } from '../config';\nimport { getFormattedDifference, formatDate } from '../utils/timeFormatter';\nimport BasicButton from './BasicButton';\n\nconst { TASK } = ROUTER_PREFIXES;\n\nfunction CustomizedTable(props) {\n  const { classes, items, showAlert, transferTaskIdToDelete } = props;\n  const { root, table } = classes;\n\n  return (\n    <Paper className={root}>\n      <Table className={table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>№</CustomTableCell>\n            <CustomTableCell align='right'>Task</CustomTableCell>\n            <CustomTableCell align='right'>Time start</CustomTableCell>\n            <CustomTableCell align='right'>Time end</CustomTableCell>\n            <CustomTableCell align='right'>Time spend</CustomTableCell>\n            <CustomTableCell align='center'>Info</CustomTableCell>\n            <CustomTableCell align='center'>Delete</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {items.map((row, i) => {\n            const { taskName, startTime, endTime, id } = row;\n\n            return (\n              <TableRow className={classes.row} key={id}>\n                <CustomTableCell component='th' scope='row'>\n                  {i + 1}\n                </CustomTableCell>\n                <CustomTableCell align='right'>{taskName}</CustomTableCell>\n                <CustomTableCell align='right'>\n                  {formatDate(startTime)}\n                </CustomTableCell>\n                <CustomTableCell align='right'>\n                  {formatDate(endTime)}\n                </CustomTableCell>\n                <CustomTableCell align='right'>\n                  {getFormattedDifference(startTime, endTime)}\n                </CustomTableCell>\n                <CustomTableCell align='center'>\n                  <Link to={`${TASK}/${id}`}>\n                    <BasicButton size={'small'}>INFO</BasicButton>\n                  </Link>\n                </CustomTableCell>\n                <CustomTableCell align='center'>\n                  <BasicButton\n                    size={'small'}\n                    onClick={() => {\n                      showAlert();\n                      transferTaskIdToDelete(id);\n                    }}\n                  >\n                    DELETE\n                  </BasicButton>\n                </CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.gray\n  },\n  body: {\n    fontSize: 14,\n    textDecoration: 'none'\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nexport default withStyles(styles)(CustomizedTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { STYLES } from '../config';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport DialogButton from './DialogButton';\n\nconst { LIGHT_BLUE, WARN_COLOR } = STYLES;\n\nexport default function(props) {\n  const { hideAlert, confirmDeletion, open } = props;\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>\n        <DialogTitleContent>Delete task</DialogTitleContent>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure to delete this task ?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <DialogButton\n          data={{ color: LIGHT_BLUE }}\n          onClick={() => {\n            hideAlert();\n            confirmDeletion();\n          }}\n        >\n          Yes\n        </DialogButton>\n        <DialogButton data={{ color: LIGHT_BLUE }} onClick={hideAlert}>\n          No\n        </DialogButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst DialogTitleContent = styled.p`\n  color: ${WARN_COLOR};\n  font-weight: bold;\n  font-size: 24px;\n`;\n","import React, { Component } from 'react';\nimport GenericTable from './GenericTable';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DeleteTaskAlertDialog from './DeleteTaskAlertDialog';\nimport { deleteTask } from '../store/actions';\n\nclass TasksTable extends Component {\n  state = {\n    showDeleteTaskAlert: false,\n    taskToDeleteId: null\n  };\n\n  showAlert = () => {\n    this.setState({ showDeleteTaskAlert: true });\n  };\n\n  hideAlert = () => {\n    this.setState({ showDeleteTaskAlert: false });\n  };\n\n  transferTaskIdToDelete = id => {\n    this.setState({ taskToDeleteId: id });\n  };\n\n  confirmDeletion = () => {\n    this.props.deleteTask(this.state.taskToDeleteId);\n  };\n\n  render() {\n    const {\n      state,\n      props,\n      hideAlert,\n      confirmDeletion,\n      transferTaskIdToDelete,\n      showAlert\n    } = this;\n    const { showDeleteTaskAlert } = state;\n    const { deleteTask, tasks } = props;\n\n    return (\n      <>\n        <DeleteTaskAlertDialog\n          open={showDeleteTaskAlert}\n          hideAlert={hideAlert}\n          deleteTask={deleteTask}\n          confirmDeletion={confirmDeletion}\n        />\n\n        <GenericTable\n          items={tasks}\n          transferTaskIdToDelete={transferTaskIdToDelete}\n          showAlert={showAlert}\n        />\n      </>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tasks: state.tasksList.tasks\n  }),\n  dispatch => bindActionCreators({ deleteTask }, dispatch)\n)(TasksTable);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Tab from '@material-ui/core/Tab';\nimport { Link, Route } from 'react-router-dom';\nimport { STYLES, ROUTER_PREFIXES } from '../config';\nimport Chart from '../components/Chart';\nimport TasksTable from '../components/TasksTable';\n\nconst { CHART, TABLE } = ROUTER_PREFIXES;\nconst { TABS_BACKGROUND } = STYLES;\n\nexport default function NavTabs() {\n  const { root } = useStyles();\n  const [value, setValue] = React.useState(\n    window.location.hash.endsWith(CHART) ? 1 : 0\n  );\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <Route>\n      <NoSsr>\n        <div className={root}>\n          <AppBar position='static'>\n            <Tabs\n              style={{ background: TABS_BACKGROUND }}\n              variant='fullWidth'\n              value={value}\n              onChange={handleChange}\n            >\n              <LinkTab label={'TASKS LOG'} to={TABLE} />\n              <LinkTab label={'TASKS CHART'} to={`/${CHART}`} replace={true} />\n            </Tabs>\n          </AppBar>\n          {value === 0 && <TasksTable />}\n          {value === 1 && <Chart />}\n        </div>\n      </NoSsr>\n    </Route>\n  );\n}\n\nfunction LinkTab(props) {\n  return <Tab component={Link} {...props} />;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n","import React, { Component } from 'react';\nimport Timer from '../Timer';\nimport NavTabs from '../NavTabs';\n\nexport default class TasksApplicationContainer extends Component {\n  render() {\n    const { match } = this.props;\n\n    return (\n      <>\n        <Timer />\n        <NavTabs url={match} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport TaskDetailsContainer from './components/containers/TaskDetailsContainer';\nimport { ROUTER_PREFIXES } from './config';\nimport TasksApplicationContainer from './components/containers/TasksApplicationContainer';\nimport { checkSerializedState } from './store/actions';\nimport './App.css';\n\nconst { TABLE, TASK, CHART } = ROUTER_PREFIXES;\n\nclass App extends React.Component {\n  state = {\n    showDeleteTaskAlert: false\n  };\n\n  componentDidMount() {\n    this.props.checkSerializedState();\n  }\n\n  render() {\n    const { tasks } = this.props;\n\n    return (\n      <div>\n        <Switch>\n          <Route\n            exact\n            path={`/${TASK}/:id`}\n            render={props => (\n              <TaskDetailsContainer id={+props.match.params.id} tasks={tasks} />\n            )}\n          />\n          <Route\n            path={[`/${CHART}`, TABLE]}\n            render={props => <TasksApplicationContainer {...props} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tasks: state.tasksList.tasks\n  }),\n  dispatch => bindActionCreators({ checkSerializedState }, dispatch)\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from './store/index';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}